diff --git a/haskell/private/cabal_wrapper.sh.tpl b/haskell/private/cabal_wrapper.sh.tpl
index 8771cd8e..1fc9f55b 100644
--- a/haskell/private/cabal_wrapper.sh.tpl
+++ b/haskell/private/cabal_wrapper.sh.tpl
@@ -69,9 +69,9 @@ function relative_to() {
 }
 
 # Remove any relative entries, because we'll be changing CWD shortly.
-LD_LIBRARY_PATH=$(canonicalize_path $LD_LIBRARY_PATH)
-LIBRARY_PATH=$(canonicalize_path $LIBRARY_PATH)
-PATH=$(canonicalize_path $PATH)
+export LD_LIBRARY_PATH=$(canonicalize_path $LD_LIBRARY_PATH)
+export LIBRARY_PATH=$(canonicalize_path $LIBRARY_PATH)
+export PATH=$(canonicalize_path $PATH)
 
 component=$1
 name=$2
diff --git a/haskell/private/ghc_wrapper.sh b/haskell/private/ghc_wrapper.sh
index e7e7805c..12bb5769 100755
--- a/haskell/private/ghc_wrapper.sh
+++ b/haskell/private/ghc_wrapper.sh
@@ -10,9 +10,10 @@ while IFS= read -r line; do compile_flags+=("$line"); done < $1
 if [ "$2" == "--persistent_worker" ]; then
     # This runs our proof-of-concept implementation of a persistent worker
     # wrapping GHC. Not ready for production usage.
+    set -x
     exec ${compile_flags[@]} --persistent_worker
 else
     while IFS= read -r line; do extra_args+=("$line"); done < "$2"
-    "${compile_flags[@]}" "${extra_args[@]}" 2>&1 \
-      | while IFS= read -r line; do [[ $line =~ ^Loaded ]] || echo "$line"; done >&2
+    set -x
+    "${compile_flags[@]}" "${extra_args[@]}"
 fi
